user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log;
pid        /run/nginx.pid;


events {
    worker_connections  1024;
    accept_mutex off;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush     on;

    keepalive_timeout  5;
    tcp_nodelay on;

    gzip  on;
    gzip_vary on;
    gzip_min_length 500;

    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    gzip_types text/plain text/xml text/css
     text/comma-separated-values
     text/javascript application/x-javascript
     application/atom+xml image/x-icon;

    # the unicorn server socket
    # adjust this to your environment
    upstream unicorn_server {
      server unix:/var/www/rnexus/tmp/sockets/unicorn.sock fail_timeout=0;
    }
    include /etc/nginx/conf.d/*.conf;

    server {
        server_name  localhost;
        root /var/www/rnexus/web/public;

        listen 80;
        client_max_body_size 4G;
        keepalive_timeout 5;

        #charset koi8-r;

        #access_log  /var/log/nginx/host.access.log  main;

        location / {
             try_files $uri @app;
        }

        location @app {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $http_host;
          proxy_redirect off;
          proxy_pass http://unicorn_server;
        }
        # redirect server error pages to the static page /40x.html
        #
        error_page  404              /404.html;
        location = /40x.html {
            root   /usr/share/nginx/html;
        }
        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
  }
}